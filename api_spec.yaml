openapi: 3.0.4
info:
  title: API Projet BigData/IA/Web groupe 1
  description: API permettant la gestion et l'analyse d'arbres via des méthodes Big Data et IA.
  version: 0.0.1
externalDocs:
  description: Repo Github
  url: https://github.com/allan-cff/projet_A4
servers:
  - url: http://https://etu0915.projets.isen-ouest.info
tags:
  - name: tree
    description: Requêtes de manipulation des arbres
  - name: species
    description: Requêtes de manipulation des espèces
  - name: states
    description: Requêtes de manipulation des états
  - name: dev
    description: Requêtes de manipulation des stades de développement
  - name : port
    description: Requêtes de manipulation des ports
  - name : pied
    description: Requêtes de manipulation des pieds

paths:
  /tree:
    get:
      tags:
        - tree
      summary: Récupérer les arbres
      description: Récupère une liste de tous les arbres de la base de données.
      operationId: getTrees
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tree'
        '400':
          description: Invalid request
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      tags:
        - tree
      summary: Ajouter un nouvel arbre à la base de données
      description: Ajoute un nouvel arbre en spécifiant toutes ses informations et renvoie l'id du nouvel arbre
      operationId: addTree
      requestBody:
        description: Les informations de l'arbre (taille, hauteur, etc) et les id de son espèce, état, stade, port et pied
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTree'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '400':
          description: Invalid input

  /tree/predictAge:
    get:
      tags:
        - tree
      summary: Prédire l'âge de l'arbre
      description: Prédis l'âge de l'arbre en fonction de la hauteur totale.
      operationId: predictAge
      parameters:
        - name: totalHeight
          in: query
          description: La hauteur totale de l'arbre en m
          required: false
          schema:
            type: number
            format: float
            default: 0
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgePrediction'
        '400':
          description: Invalid query parameter
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
                
  /tree/predictCluster:
    get:
      tags:
        - tree
      summary: Prédire le cluster de l'arbre
      description: Prédis le cluster de l'arbre en fonction de sa heuteur totale et de sa largeur de tronc.
      operationId: predictCluster
      parameters:
        - name: totalHeight
          in: query
          description: La hauteur totale de l'arbre en m
          required: false
          schema:
            type: number
            format: float
            default: 0
        - name: trunkDiameter
          in: query
          description: Le diamètre du tronc de l'arbre en mm
          required: false
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterPrediction'
        '400':
          description: Invalid query parameter
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /tree/{id}:
    get:
      tags:
        - tree
      summary: Récupérer un arbre depuis son id
      description: Récupère un arbre depuis son id avec toutes ses informations peuplées.
      operationId: getTree
      parameters:
        - name: id
          in: path
          description: ID of tree to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TreeData'
        '400':
          description: Invalid ID supplied
        '404':
          description: Tree not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
                
  /species:
    get:
      tags:
        - species
      summary: Récupérer les espèces
      description: Récupère la liste des espèces d'arbre et leur id
      operationId: getSpecies
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Species'
        '400':
          description: Invalid request
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - species
      summary: Ajouter une nouvelle espèce à la base de données
      description: Ajoute une nouvelle espèce à la base de donnée et renvoie son id
      operationId: addSpecies
      requestBody:
        description: Contient le nom de l'espèce à créer
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewSpecies'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '400':
          description: Invalid input
                
  /state:
    get:
      tags:
        - states
      summary: Récupérer les arbres
      description: Récupère la liste des états des arbres et leur id
      operationId: getStates
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/State'
        '400':
          description: Invalid request
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
                
                
  /dev:
    get:
      tags:
        - dev
      summary: Récupérer les arbres
      description: Récupère la liste de stades de développement des arbres et leur id
      operationId: getDevs
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dev'
        '400':
          description: Invalid request
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
                
  /port:
    get:
      tags:
        - port
      summary: Récupérer les arbres
      description: Récupère la liste de tous les ports d'arbre et leur id
      operationId: getPorts
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Port'
        '400':
          description: Invalid request
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
                
  /pied:
    get:
      tags:
        - pied
      summary: Récupérer les arbres
      description: Récupère la liste de tous les types de pieds d'arbre et leur id
      operationId: getPieds
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pied'
        '400':
          description: Invalid request
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    NewTree:
      required:
        - totalHeight
        - trunkHeight
        - trunkDiameter
        - isRemarkable
        - lat
        - long
        - age
        - speciesId
        - stateId
        - devId
        - portId
        - piedId
      type: object
      properties:
        totalHeight:
          type: number
          format: float
        trunkHeight:
          type: number
          format: float
        trunkDiameter:
          type: number
          format: float
        isRemarkable:
          type: boolean
        lat:
          type: number
          format: float
        long:
          type: number
          format: float
        age:
          type: integer
          format: int32
        speciesId:
          type: integer
          format: int32
        stateId:
          type: integer
          format: int32
        devId:
          type: integer
          format: int32
        portId:
          type: integer
          format: int32
        piedId:
          type: integer
          format: int32

    Tree:
      required:
        - id
        - totalHeight
        - trunkHeight
        - trunkDiameter
        - isRemarkable
        - lat
        - long
        - age
        - speciesId
        - stateId
        - devId
        - portId
        - piedId
        
      type: object
      properties:
        id:
          type: integer
          format: int32
        totalHeight:
          type: number
          format: float
        trunkHeight:
          type: number
          format: float
        trunkDiameter:
          type: number
          format: float
        isRemarkable:
          type: boolean
        lat:
          type: number
          format: float
        long:
          type: number
          format: float
        age:
          type: integer
          format: int32
        speciesId:
          type: integer
          format: int32
        stateId:
          type: integer
          format: int32
        devId:
          type: integer
          format: int32
        portId:
          type: integer
          format: int32
        piedId:
          type: integer
          format: int32
          
    TreeData:
      required:
        - totalHeight
        - trunkHeight
        - trunkDiameter
        - isRemarkable
        - lat
        - long
        - age
        - species
        - state
        - dev
        - port
        - pied
      type: object
      properties:
        specieId:
          type: integer
          format: int32
        totalHeight:
          type: number
          format: float
        trunkHeight:
          type: number
          format: float
        trunkDiameter:
          type: number
          format: float
        isRemarkable:
          type: boolean
        lat:
          type: number
          format: float
        long:
          type: number
          format: float
        age:
          type: integer
          format: int32
        species:
          $ref: '#/components/schemas/Species'
        state:
          $ref: '#/components/schemas/State'
        dev:
          $ref: '#/components/schemas/Dev'
        port:
          $ref: '#/components/schemas/Port'
        pied:
          $ref: '#/components/schemas/Pied'
      
    Species:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: integer
        name:
          type: string

    NewSpecies:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          
    State:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          
    Dev:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          
    Port:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          
    Pied:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: integer
          
        name:
          type: string

    AgePrediction:
      required:
        - value
      type: object
      properties:
        value:
          type: number
          format: float

    ClusterPrediction:
      required:
        - value
      type: object
      properties:
        value:
          type: integer
          format: int32
          
    Success:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          format: int32

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
        message:
          type: string